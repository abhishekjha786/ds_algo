Used in combinatorics to solve certain combinatorical problems.

Occurs when you want to count the number of ways to group identical objects

E.g.
How many non-negative integer solutions exist for this equation
X >= 0
Y >= 0

X + Y = 20

Naive solutions will be

for i=1;i<20;i++
    for j=1;j<20;j++
        if (i + j) == 20 :
            cout<<i<<" "<<j;


Total number of solutions = 
0 + 20
1 + 19
2 + 18
...

19 + 1
20 + 0

We would get 21 solutions. i.e. N+1 solutions.

E.g. 

Think about this problem
X + Y + Z + A + B + C = 220
These are too many variables.

E.g. 
how many n digit numbers can be formed when the digits are in non decreasing order
and each digit is from 0-9

n = 3
1 1 2
1 2 3

--------------------------------------------------------------------------------------------------------------------------------

E.g. How many non-negative integer solutions exists for the problem

X + Y = 5
       
Take 5 *             * * * * *
Take bars to set partitions.
Use only one bar here. Left side belongs to X, right side belongs to Y.

* * | * * *          (solution = (2,3))

We have 6 solutions.
[(0, 5) (1, 4), (2, 3), (3, 2), (4, 1), ,(5, 0)]

Each solution can be represented using stars and bars.

E.g How many non-negative integer solutions exists for the problem

X + Y + Z = 3

* * | | *

We need 3 * here.
And we would require 2 bars.

In general the number of solutions can be seen as picking a bars from stars + bars
Or picking stars from Stars + bars.

Stars = N
Bars = K-1

Stars + Bars = N + K - 1

Solutions = (N + K - 1) C (N) or (N + K - 1) C (K - 1)

Note that this above formula is applicable only for non-negative solutions that is
solutions that include 0.



